from abc import ABC
from .models import *

class AbcCardsRepo(ABC):
    def get(self, id: str) -> CardModel: ...

    def gets(self, ids: list[str]) -> list[CardModel]: ...
    
    def create(self, card: CardModel) -> CardModel: ...

    def update(self, id: str, card: CardUpdateModel, conditions: dict = {}) -> CardModel | None: ...

    def hide(self, id: str, conditions: dict = {}) -> bool: ...

    def findByTags(self, tags: list[str], limit:int = 100) -> list[str]: ...

    def findTagsByTags(self, tags: list[str], limit:int = 100) -> list[str]: ...

    def findByAuthor(self, authorId: str, limit: int = 100) -> list[str]: ...


class AbcGamesRepo(ABC):

    def get(self, id: str) -> GameModel: ...
    
    def getByCard(self, cardId: str) -> list[GameModel]: ...

    def create(self, game: GameModel) -> GameModel: ...

    def update(self, id: str, game: GameUpdateModel, conditions: dict = {}) -> GameModel | None: ...

    def hide(self, id: str, conditions: dict = {}): ...

    def findCardsByOwner(self, ownerId: str, limit: int = 100) -> list[str]: ...


        